{
    "openapi": "3.0.0",
    "info": {
        "title": "Symbiota API",
        "contact": {
            "name": "Symbiota Support Hub Team",
            "email": "symbiota@asu.edu"
        },
        "version": "2.0"
    },
    "servers": [
        {
            "url": "../"
        }
    ],
    "paths": {
        "/api/v2/collection": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/collection",
                "parameters": [
                    {
                        "name": "managementType",
                        "in": "query",
                        "description": "live, snapshot, aggregate",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "collectionType",
                        "in": "query",
                        "description": "preservedSpecimens, observations, researchObservation",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Controls the number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1000
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Determines the offset for the search results. A limit of 200 and offset of 100, will get the third page of 100 results.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of collections",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. "
                    }
                }
            }
        },
        "/api/v2/collection/{identifier}": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/collection/identifier",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "Installation ID or GUID associated with target collection",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns collection data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. Collection identifier is required."
                    }
                }
            }
        },
        "/api/v2/installation": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/installation",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Pagination parameter: maximum number of records per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Pagination parameter: page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of installations registered within system",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. "
                    }
                }
            }
        },
        "/api/v2/installation/{identifier}": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/installation/identifier",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "Installation ID or GUID associated with target installation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns metabase on installation registered within system with matching ID",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. Installation identifier is required."
                    }
                }
            }
        },
        "/api/v2/installation/ping": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/installation/ping",
                "responses": {
                    "200": {
                        "description": "Returns installation metadata",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. "
                    }
                }
            }
        },
        "/api/v2/installation/{identifier}/touch": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/installation/identifier/touch",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "Identifier of the remote installation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endpoint",
                        "in": "query",
                        "description": "Url to Symbiota root of remote installation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns metabase remote installation, if successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. Identifier of remote installation is required."
                    }
                }
            }
        },
        "/api/v2/installation/{identifier}/occurrence": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/installation/identifier/occurrence",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "Identifier of the remote installation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Pagination parameter: maximum number of records per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Pagination parameter: page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of occurrences associated with an installations",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. Identifier of remote installation is required."
                    }
                }
            }
        },
        "/api/v2/inventory": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/inventory",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Controls the number of results in the page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Determines the offset for the search results. A limit of 200 and offset of 100, will get the third page of 100 results.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of inventories registered within system",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. "
                    }
                }
            }
        },
        "/api/v2/inventory/{identifier}": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/inventory/identifier",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "PK, GUID, or recordID associated with target inventory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns metabase on inventory registered within system with matching ID",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. Inventory identifier is required."
                    }
                }
            }
        },
        "/api/v2/inventory/{identifier}/taxa": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/inventory/identifier/taxa",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Controls the number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Determines the offset for the search results. A limit of 200 and offset of 100, will get the third page of 100 results.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of inventories registered within system",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. "
                    }
                }
            }
        },
        "/api/v2/occurrence/annotation/search": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/occurrence/annotation/search",
                "parameters": [
                    {
                        "name": "collid",
                        "in": "query",
                        "description": "Internal identifier (PK) for collection",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Annoration type (internal, external) ",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "internal",
                            "enum": [
                                "internal",
                                "external"
                            ]
                        }
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "description": "External source of Annoration (e.g. geolocate) ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldName",
                        "in": "query",
                        "description": "Name of occurrence field that was annotated (e.g. recordedBy, eventDate) ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "The start date of a date range the annotation was created (e.g. 2022-02-05) ",
                        "required": false,
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "The end date of a date range the annotation was created (e.g. 2022-02-05) ",
                        "required": false,
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Controls the number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 500
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Determines the offset for the search results. A limit of 200 and offset of 100, will get the third page of 100 results.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of occurrence edits",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. "
                    }
                }
            }
        },
        "/api/v2/occurrence/search": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/occurrence/search",
                "parameters": [
                    {
                        "name": "catalogNumber",
                        "in": "query",
                        "description": "catalogNumber",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "occurrenceID",
                        "in": "query",
                        "description": "occurrenceID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "country",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stateProvince",
                        "in": "query",
                        "description": "State, Province, or second level political unit",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "county",
                        "in": "query",
                        "description": "County, parish, or third level political unit",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "collid",
                        "in": "query",
                        "description": "collid - collection identifier in portal",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "datasetID",
                        "in": "query",
                        "description": "dataset ID within portal",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "family",
                        "in": "query",
                        "description": "family",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sciname",
                        "in": "query",
                        "description": "Scientific Name - binomen only without authorship",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "eventDate",
                        "in": "query",
                        "description": "Date as YYYY, YYYY-MM or YYYY-MM-DD",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Controls the number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Determines the offset for the search results. A limit of 200 and offset of 100, will get the third page of 100 results.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of occurrences",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. "
                    }
                }
            }
        },
        "/api/v2/occurrence/{identifier}": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/occurrence/identifier",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "occid or specimen GUID (occurrenceID) associated with target occurrence",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeMedia",
                        "in": "query",
                        "description": "Whether to include media within output",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "includeIdentifications",
                        "in": "query",
                        "description": "Whether to include full Identification History within output",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns single occurrence record",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. Occurrence identifier is required."
                    }
                }
            }
        },
        "/api/v2/occurrence/{identifier}/identification": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/occurrence/identifier/identification",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "occid or specimen GUID (occurrenceID) associated with target occurrence",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns identification records associated with a given occurrence record",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. Occurrence identifier is required."
                    }
                }
            }
        },
        "/api/v2/occurrence/{identifier}/media": {
            "get": {
                "tags": [
                    ""
                ],
                "operationId": "/api/v2/occurrence/identifier/media",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "occid or specimen GUID (occurrenceID) associated with target occurrence",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns media records associated with a given occurrence record",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. Occurrence identifier is required."
                    }
                }
            }
        }
    },
    "components": {
        "responses": {
            "200": {
                "description": "Triggers a reharvest event of a snapshot record. If record is Live managed, request is ignored",
                "content": {
                    "application/json": {
                        "schema": {}
                    }
                }
            },
            "400": {
                "description": "Error: Bad request: Occurrence identifier is required, API can only be triggered locally (at this time)."
            },
            "500": {
                "description": "Error: unable to locate record"
            }
        },
        "parameters": {
            "identifier": {
                "name": "identifier",
                "in": "path",
                "description": "occid or specimen GUID (occurrenceID) associated with target occurrence",
                "required": true,
                "schema": {
                    "type": "string"
                }
            }
        }
    }
}